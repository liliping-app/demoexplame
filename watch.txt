谈谈VUE钟 methods、watch、computed的区别
1.methods、watch、computed都是以函数为基础的，单各自却有所不同。
对比：
1.methods和（watch/computed）的对比
2.watch和computed的对比
作用机制上：
1.watch和computed都是以Vue的依赖追踪机制为基础的，它们都试图处理一件事情：当某一个数据（城它为依赖数据）发生变化的时候，所有依赖这个数据的“数自动”发生变化，也就是自动调用相关的函数去实现数据的变动。
2.对methods：methods里面是用来定义函数的，很明显，它需要手动调用才能执行。而不像watch和computed那样，“自动执行”预定义的函数。
总结：
methods里面定义的函数，你显然需要主动调用的，而和watch和computed相关的函数，会自动调用完成我们希望完成的作用。
从性质上看：
1.menthods里面定义的是函数，你显然需要想“fuc()”这样去调用它（假设函数为fuc）
2.computed是计算属性，事实上和data对象的数据属性是同一类的（使用上）
computed: {
    fullName: function () {
        return this.firstName + lastName;
    }
}
你在取用的时候，用this.fullName去取用，就和去data一样（不要当成函数调用！！！）
3.watch：类似于监听机制 + 事件机制：
例如：
watch: {
    firstName: function (val) {
        this.fullName = val + this.lastName;
    }
}
firstName的改变是这个特殊“事件”被触发的条件，而firstName对应的函数就相当于监听到事件发生后执行的方法。
watch和computed的对比
即数据A依赖于数据B，我们希望在数据B改变的同时，能够自动完成A的改变
首先它们都是以Vue的依赖追踪机制为基础的，它们的共同点是：都是希望在依赖数据发生改变的时候，被依赖的数据根据预定义好的函数，发生“自动”的变化。
我们当然可以自己写代码完成这一切，但却很可能造成写法混乱，代码冗余的情况。Vue为我们提供了这样一个方便的接口，统一规则。
但watch和computed也明显不同的地方；
watch和computed各自处理的数据关系场景不同
1.watch擅长处理的场景：一个数据影响多个数据
2.computed擅长处理的场景：一个数据受多个数据影响
watch擅长处理的场景：一个数据影响多个数据
对于watch，我们现行一个场景说：
在《海贼王》里面，主角团队的名称叫做：“草帽海贼团”
所以我们把船员依次称为：
草帽海贼团索隆,草帽海贼团娜美,以此类推。。。
我们希望：当船团名称发生变更的时候，这艘船上所有船员的名字一起变更！！
例如：
有一天，船长路飞为了加强团队建设，弘扬海贼文化，决定“草帽海贼团”改名为“橡胶海贼团”（路飞是橡胶恶魔果实能力者）
computed擅长处理的场景：一个数据受多个数据影响
methods不处理数据逻辑关系，只提供可调用的函数

